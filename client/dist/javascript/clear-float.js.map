{"version":3,"sources":["clear-float.js"],"names":["plugin","init","editor","clear_html","clear_html_no_semicolon","replace","clear_title","clear_placeholder","tinymce","Env","transparentSrc","ui","registry","addButton","icon","tooltip","onAction","insertClearFloat","execCommand","on","event","content","re_clear_html","RegExp","re_clear_html_no_semicolon","get","image","string","indexOf","getMetadata","name","url","PluginManager","add"],"mappings":"CAAA,WAEA,MAAAA,OAAA,CACAC,KAAAC,QACA,MAAAC,WAAA,4BACAC,wBAAAD,WAAAE,QAAA,IAAA,EAAA,EACAC,YAAA,cACAC,kBAAA,QACA,QAAAC,QAAAC,IAAAC,eAAA,KACA,mCACA,UACA,UAAAJ,YAAA,KACA,2BACA,4BACA,KAEAJ,OAAAS,GAAAC,SAAAC,UAAA,cAAA,CACAC,KAAA,aACAC,QAAA,cACAC,SAAAC,gBACA,CAAA,EAEA,SAAAA,mBACAf,OAAAgB,YAAA,mBAAA,MAAAX,iBAAA,CACA,CAEAL,OAAAiB,GAAA,mBAAA,SAAAC,OACA,GAAAA,MAAAC,QAAA,CACA,IAAAC,cAAA,IAAAC,OAAApB,WAAA,GAAA,EACA,IAAAqB,2BAAA,IAAAD,OAAAnB,wBAAA,GAAA,EACAgB,MAAAC,QAAAD,MAAAC,QAAAhB,QAAAiB,cAAAf,iBAAA,EAMAa,MAAAC,QAAAD,MAAAC,QAAAhB,QAAAmB,2BAAAjB,iBAAA,EAKAa,MAAAC,QAAAD,MAAAC,QAAAhB,QAAA,oCAAAE,iBAAA,CACA,CACA,CAAA,EAEAL,OAAAiB,GAAA,cAAA,SAAAC,OACA,GAAAA,MAAAK,IAAA,CACAL,MAAAC,QAAAD,MAAAC,QAAAhB,QAAA,cAAA,SAAAqB,OACA,IAAAC,OAEA,GAAAD,MAAAE,QAAA,yBAAA,IAAA,CAAA,EAAA,CACAD,OAAAxB,UACA,CACA,OAAAwB,QAAAD,KACA,CAAA,CACA,CACA,CAAA,EAEA,MAAA,CACAG,cACA,MAAA,CACAC,KAAA,eACAC,IAAA,0DACA,CACA,CACA,CACA,CACA,EAGAvB,QAAAwB,cAAAC,IAAA,cAAA,QAAAjC,OAAAC,KAAAC,MAAA,CAAA,CACA,GAAA","file":"clear-float.js","sourcesContent":["( function() {\n\n    const plugin = {\n        init(editor) {\n            const clear_html = '<br style=\"clear: both;\">',\n                clear_html_no_semicolon = clear_html.replace( ';', '' ),\n                clear_title = 'Clear float',\n                clear_placeholder = '<img ' +\n                    'src=\"' + tinymce.Env.transparentSrc + '\" ' +\n                    'class=\"mce-tinymce-clear-float\" ' +\n                    'alt=\"\" ' +\n                    'title=\"' + clear_title + '\" ' +\n                    'data-mce-resize=\"false\" ' +\n                    'data-mce-placeholder=\"1\" ' +\n                    '/>';\n\n            editor.ui.registry.addButton( 'clear-float', {\n                icon: 'page-break',\n                tooltip: 'Clear float',\n                onAction: insertClearFloat\n            } );\n\n            function insertClearFloat() {\n                editor.execCommand( 'mceInsertContent', false, clear_placeholder );\n            }\n\n            editor.on( 'BeforeSetContent', function( event ) {\n                if ( event.content ) {\n                    var re_clear_html = new RegExp( clear_html, 'g' );\n                    var re_clear_html_no_semicolon = new RegExp( clear_html_no_semicolon, 'g' );\n                    event.content = event.content.replace( re_clear_html, clear_placeholder );\n\n                    /**\n                     * Under certain circumstances, TinyMCE will strip the semicolon from `<br style=\"clear: both;\">.\n                     * Also replace this.\n                     */\n                    event.content = event.content.replace( re_clear_html_no_semicolon, clear_placeholder );\n                    /**\n                     * Replace `<div style=\"clear: (left|right|both);\"></div>` with placeholder too.\n                     * This HTML markup has been used until version 1.1.\n                     */\n                    event.content = event.content.replace( /<div style=\"clear:(.+?)\"><\\/div>/g, clear_placeholder );\n                }\n            } );\n\n            editor.on( 'PostProcess', function( event ) {\n                if ( event.get ) {\n                    event.content = event.content.replace( /<img[^>]+>/g, function( image ) {\n                        var string;\n\n                        if ( image.indexOf( 'mce-tinymce-clear-float' ) !== -1 ) {\n                            string = clear_html;\n                        }\n                        return string || image;\n                    } );\n                }\n            } );\n\n            return {\n                getMetadata() {\n                    return {\n                        name: 'Clear Floats',\n                        url: 'https://github.com/xini/silverstripe-tinymce-clearfloats',\n                    };\n                }\n            };\n        }\n    };\n\n    // Adds the plugin class to the list of available TinyMCE plugins\n    tinymce.PluginManager.add('clear-float', (editor) => plugin.init(editor));\n} )();\n"]}